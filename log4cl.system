;;; -*- Mode: LISP; Package: :cl-user; BASE: 10; Syntax: ANSI-Common-Lisp; -*-
;;;
;;;   Time-stamp: <2019-08-12 11:23:27 IST>
;;;   Touched: Mon Aug 12 10:54:38 2019 +0530 <enometh@net.meer>
;;;   Bugs-To: enometh@net.meer
;;;   Status: Experimental.  Do not redistribute
;;;   Copyright (C) 2019 Madhu.  All Rights Reserved.
;;;
;;; gitlab.common-lisp.net/stefil/stefil
;;;
(in-package "CL-USER")

(defvar *log4cl-source-dir*
  (merge-pathnames "log4cl/" (translate-logical-pathname "EXTERN:")))
(defvar *log4cl-binary-dir* (binary-directory *log4cl-source-dir*))

(mk:defsystem :log4cl
   :source-pathname *log4cl-source-dir*
   :binary-pathname *log4cl-binary-dir*
   :source-extension "lisp"
   :depends-on (:bordeaux-threads)
   :components ((:module "src"
                 :components ((:file "impl-package")
                              (:file "defs")
                              (:file "naming")
                              #+sbcl (:file "naming-sbcl")
                              #+ccl (:file "naming-ccl")
                              (:file "appender-base")
                              (:file "hierarchy-base")
                              (:file "hierarchy")
			      (:file "trunc")
                              (:file "logger")
                              (:file "logging-macros")
                              (:file "self-logger")
                              (:file "layout")
                              (:file "simple-layout")
                              (:file "pattern-layout")
                              (:file "appender")
                              (:file "watcher")
                              (:file "configurator")
                              (:file "property-parser")
                              (:file "property-configurator")
                              (:file "package")))))

#+nil
(mk:oos :log4cl :load :compile-during-load t)

(mk:defsystem :log4cl-test
  :source-pathname *log4cl-source-dir*
  :binary-pathname *log4cl-binary-dir*
  :depends-on (:log4cl :stefil)
  :source-extension "lisp"
  :components ((:module "tests"
                :components ((:file "test-defs")
                             (:file "test-logger")
                             (:file "test-category-separator")
                             (:file "test-layouts")
                             (:file "test-appenders")
                             (:file "test-configurator")
                             (:file "test-speed")
                             (:file "test-file-category")
                             (:file "test-compat")))))

#+nil
(mk:oos :log4cl-test :load :compile-during-load t)

#+nil
(progn
  (let ((*package* (find-package :log4cl-test)))
    (eval (read-from-string "(stefil:funcall-test-with-feedback-message 'log4cl-test::test)"))))

#+nil
(progn
  (let ((foo (find-symbol (symbol-name '#:%fix-root-logger-check)
                            (find-package :log4cl))))
    (when foo
      (let ((*package* (find-package :log4cl)))
        (funcall foo)))))




(mk:defsystem :log4slime
  :source-pathname *log4cl-source-dir*
  :binary-pathname *log4cl-binary-dir*
  :source-extension "lisp"
  :depends-on (#:log4cl #:swank)
  :components ((:file "src/log4slime")))

#+nil
(mk:oos :log4slime :load :compile-during-load t)

(mk:defsystem :log4sly
   :source-pathname *log4cl-source-dir*
   :binary-pathname *log4cl-binary-dir*
   :source-extension "lisp"
  :depends-on (#:log4cl #:slynk)
  :components ((:file "src/log4sly")))

#+nil
(mk:oos :log4sly :load :compile-during-load t)

(mk:defsystem :log4cl-examples
   :source-pathname *log4cl-source-dir*
   :binary-pathname *log4cl-binary-dir*
   :source-extension "lisp"
  :depends-on (#:log4cl #:swank)
  :components ((:file "examples/naming-examples")
               (:file "examples/customize-log-expr")))

#+nil
(mk:oos :log4cl-examples :load :compile-during-load t)
